{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-015243ac\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chat-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"chat-sidebar\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, [/*#__PURE__*/_createElementVNode(\"b\", null, [/*#__PURE__*/_createElementVNode(\"strong\", null, [/*#__PURE__*/_createTextVNode(\"DIABOT \"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\" CHAT\")])])])], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"chat-content\"\n};\nconst _hoisted_4 = {\n  class: \"chat-messages\"\n};\nconst _hoisted_5 = {\n  class: \"message-content\"\n};\nconst _hoisted_6 = {\n  class: \"chat-input\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"SEND \", -1 /* HOISTED */));\nconst _hoisted_8 = [_hoisted_7];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id,\n      class: _normalizeClass([\"message\", {\n        'user-message': message.from === 'user',\n        'bot-message': message.from === 'bot'\n      }])\n    }, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString(message.text), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.inputText = $event),\n    onKeydown: _cache[1] || (_cache[1] = _withKeys((...args) => $setup.sendMessage && $setup.sendMessage(...args), [\"enter\"])),\n    placeholder: \"Type your message...\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $setup.inputText]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.sendMessage && $setup.sendMessage(...args))\n  }, _hoisted_8)])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_7","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$setup","messages","message","key","id","_normalizeClass","from","_hoisted_5","_toDisplayString","text","_hoisted_6","inputText","$event","onKeydown","_cache","_withKeys","args","sendMessage","placeholder","onClick"],"sources":["/Users/mickywalters/capstone/COMP3901-Capstone/src/components/DiabotPage.vue"],"sourcesContent":["<template>\n    <div class=\"chat-container\">\n        <div class=\"chat-sidebar\">\n            <h1> <b><strong>DIABOT <br> CHAT</strong></b></h1>\n        </div>    \n    <div class=\"chat-content\">\n        <div class=\"chat-messages\">\n            <div v-for=\"message in messages\" :key=\"message.id\" class=\"message\" :class=\"{ 'user-message': message.from === 'user', 'bot-message': message.from === 'bot' }\">\n                <div class=\"message-content\">\n                    {{ message.text }}\n                </div>\n            </div>\n        </div>\n    <div class=\"chat-input\">\n        <input v-model=\"inputText\" @keydown.enter=\"sendMessage\" placeholder=\"Type your message...\" />\n        <button @click=\"sendMessage\"> <strong>SEND </strong></button>\n    </div>\n  </div>\n    </div>\n  </template>\n  \n  <script>\n  import { reactive, ref } from 'vue';\n  \n  export default {\n  name: 'diabotPage',\n  setup() {\n    const messages = reactive([]);\n    const inputText = ref('');\n  \n    const sendMessage = () => {\n      const text = inputText.value.trim();\n      if (text) {\n        messages.push({ id: Date.now(), text, from: 'user' });\n        inputText.value = '';\n      }\n    };\n  \n    return { messages, inputText, sendMessage };\n  },\n  };\n  </script>\n  \n  <style scoped>\n  \n    .chat-container{\n        display: flex;\n        width: 100%;\n        height: 100vh;\n        margin: -25px; \n        margin-top: -155px;\n        margin-bottom: -115px;\n    }\n  \n    .chat-content{\n        display: flex;\n        flex-direction: column;\n        flex: 1;\n    }\n  \n    .chat-messages{\n        flex:1;\n        font-size: 10px;\n    }\n  \n    .message{\n        font-size: 20px;\n    }\n  \n    .user-message{\n        background-color: #c8d1d1;\n        border-radius: 5px;\n        align-self: flex-end;\n    }\n  \n    .bot-message{\n        background-color: #e2e2e2;\n        border-radius: 5px;\n        align-self: flex-start;\n    }\n  \n    .chat-input{\n        display: flex;\n        justify-content: flex-end;\n    }\n  \n    .chat-input input {\n        flex: 1;\n        padding: 10px;\n        border-radius: 5px;\n        border: 1px solid #ccc;\n    }\n  \n    .chat-input button {\n        border-radius: 5px;\n        background-color: #4C8F9E;\n        color: #fff;\n        border: none;\n        cursor: pointer;\n    }\n    .chat-sidebar {\n        width: 22%;\n        padding: 2px;\n        border-left: 1px solid #ccc;\n        background-color: #4C8F9E;\n    }\n  \n    .chat-sidebar h1 {\n        color: white;\n        font-family: Georgia, 'Times New Roman', Times, serif;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n    }\n  </style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAgB;gEACvBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAc,I,aACrBC,mBAAA,CAAkD,a,aAA7CA,mBAAA,CAAwC,Y,aAArCA,mBAAA,CAAiC,iB,8BAAzB,SAAO,G,aAAAA,mBAAA,CAAI,O,8BAAA,OAAK,E;;EAEnCD,KAAK,EAAC;AAAc;;EAChBA,KAAK,EAAC;AAAe;;EAEbA,KAAK,EAAC;AAAiB;;EAKnCA,KAAK,EAAC;AAAY;gEAEWC,mBAAA,CAAsB,gBAAd,OAAK;oBAAbC,UAAsB,C;;uBAdxDC,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBFC,UAEM,EACVJ,mBAAA,CAYI,OAZJK,UAYI,GAXAL,mBAAA,CAMM,OANNM,UAMM,I,kBALFJ,mBAAA,CAIMK,SAAA,QAAAC,WAAA,CAJiBC,MAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAnBT,mBAAA,CAIM;MAJ4BU,GAAG,EAAED,OAAO,CAACE,EAAE;MAAEd,KAAK,EAAAe,eAAA,EAAC,SAAS;QAAA,gBAA2BH,OAAO,CAACI,IAAI;QAAA,eAA4BJ,OAAO,CAACI,IAAI;MAAA;QAC7If,mBAAA,CAEM,OAFNgB,UAEM,EAAAC,gBAAA,CADCN,OAAO,CAACO,IAAI,iB;oCAI/BlB,mBAAA,CAGM,OAHNmB,UAGM,G,gBAFFnB,mBAAA,CAA6F;+DAA7ES,MAAA,CAAAW,SAAS,GAAAC,MAAA;IAAGC,SAAO,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,KAAAC,IAAA,KAAQhB,MAAA,CAAAiB,WAAA,IAAAjB,MAAA,CAAAiB,WAAA,IAAAD,IAAA,CAAW;IAAEE,WAAW,EAAC;iEAApDlB,MAAA,CAAAW,SAAS,E,GACzBpB,mBAAA,CAA6D;IAApD4B,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEhB,MAAA,CAAAiB,WAAA,IAAAjB,MAAA,CAAAiB,WAAA,IAAAD,IAAA,CAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}