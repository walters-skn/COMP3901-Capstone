{"ast":null,"code":"import { QrcodeStream } from 'vue3-qrcode-reader';\nexport default {\n  data() {\n    return {\n      error: '',\n      decodedString: ''\n    };\n  },\n  components: {\n    QrcodeStream\n  },\n  methods: {\n    async onInit(promise) {\n      try {\n        await promise;\n      } catch (error) {\n        if (error.name === 'NotAllowedError') {\n          this.error = \"ERROR: you need to grant camera access permission\";\n        } else if (error.name === 'NotFoundError') {\n          this.error = \"ERROR: no camera on this device\";\n        } else if (error.name === 'NotSupportedError') {\n          this.error = \"ERROR: secure context required (HTTPS, localhost)\";\n        } else if (error.name === 'NotReadableError') {\n          this.error = \"ERROR: is the camera already in use?\";\n        } else if (error.name === 'OverconstrainedError') {\n          this.error = \"ERROR: installed cameras are not suitable\";\n        } else if (error.name === 'StreamApiNotSupportedError') {\n          this.error = \"ERROR: Stream API is not supported in this browser\";\n        }\n        this.error = `ERROR: Camera error (${error.name})`;\n      }\n    },\n    onDecode(decodedString) {\n      //this.decodedString = decodedString;\n      window.location.replace(decodedString);\n    }\n  }\n};","map":{"version":3,"names":["QrcodeStream","data","error","decodedString","components","methods","onInit","promise","name","onDecode","window","location","replace"],"sources":["C:\\Users\\18765\\Downloads\\COMP3901-Capstone\\src\\components\\NutritionalScanner.vue"],"sourcesContent":["\r\n<template> \r\n\r\n    <div class=\"heading\">\r\n        <h2> <b> <strong> Place Barcode Within The Frame To Get Nutritional Content of Meal </strong></b></h2>\r\n        <p class=\"error\">{{ error }}</p>\r\n        <p> {{ decodedString }}</p>\r\n    </div>\r\n    <div class=\"scanner\" >\r\n        <qrcode-stream @init=\"onInit\" @decode=\"onDecode\"></qrcode-stream>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport {QrcodeStream} from 'vue3-qrcode-reader'\r\n\r\nexport default{\r\n    data(){\r\n        return{\r\n            error: '',\r\n            decodedString: '',\r\n        }\r\n    },\r\n    components:{\r\n        QrcodeStream\r\n    },\r\n    methods: {\r\n        async onInit(promise){\r\n            try {\r\n                await promise\r\n            } catch (error) {\r\n                if (error.name === 'NotAllowedError') {\r\n                this.error = \"ERROR: you need to grant camera access permission\"\r\n                } else if (error.name === 'NotFoundError') {\r\n                this.error = \"ERROR: no camera on this device\"\r\n                } else if (error.name === 'NotSupportedError') {\r\n                this.error = \"ERROR: secure context required (HTTPS, localhost)\"\r\n                } else if (error.name === 'NotReadableError') {\r\n                this.error = \"ERROR: is the camera already in use?\"\r\n                } else if (error.name === 'OverconstrainedError') {\r\n                this.error = \"ERROR: installed cameras are not suitable\"\r\n                } else if (error.name === 'StreamApiNotSupportedError') {\r\n                this.error = \"ERROR: Stream API is not supported in this browser\"\r\n                }\r\n                this.error = `ERROR: Camera error (${error.name})`;\r\n                }\r\n            },\r\n            onDecode(decodedString){\r\n                //this.decodedString = decodedString;\r\n                window.location.replace(decodedString)\r\n\r\n            }\r\n        }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped> \r\n    .heading{\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        padding-top: 15%;\r\n        color: #4C8F9E;\r\n    }\r\n\r\n    .scanner{\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        height: 80vh;\r\n        width: 100vh;\r\n    }\r\n\r\n    .error {\r\n    font-weight: bold;\r\n    color: red;\r\n    }\r\n\r\n</style>"],"mappings":"AAgBA,SAAQA,YAAY,QAAO,oBAAmB;AAE9C,eAAc;EACVC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,KAAK,EAAE,EAAE;MACTC,aAAa,EAAE;IACnB;EACJ,CAAC;EACDC,UAAU,EAAC;IACPJ;EACJ,CAAC;EACDK,OAAO,EAAE;IACL,MAAMC,MAAMA,CAACC,OAAO,EAAC;MACjB,IAAI;QACA,MAAMA,OAAM;MAChB,EAAE,OAAOL,KAAK,EAAE;QACZ,IAAIA,KAAK,CAACM,IAAG,KAAM,iBAAiB,EAAE;UACtC,IAAI,CAACN,KAAI,GAAI,mDAAkD;QAC/D,OAAO,IAAIA,KAAK,CAACM,IAAG,KAAM,eAAe,EAAE;UAC3C,IAAI,CAACN,KAAI,GAAI,iCAAgC;QAC7C,OAAO,IAAIA,KAAK,CAACM,IAAG,KAAM,mBAAmB,EAAE;UAC/C,IAAI,CAACN,KAAI,GAAI,mDAAkD;QAC/D,OAAO,IAAIA,KAAK,CAACM,IAAG,KAAM,kBAAkB,EAAE;UAC9C,IAAI,CAACN,KAAI,GAAI,sCAAqC;QAClD,OAAO,IAAIA,KAAK,CAACM,IAAG,KAAM,sBAAsB,EAAE;UAClD,IAAI,CAACN,KAAI,GAAI,2CAA0C;QACvD,OAAO,IAAIA,KAAK,CAACM,IAAG,KAAM,4BAA4B,EAAE;UACxD,IAAI,CAACN,KAAI,GAAI,oDAAmD;QAChE;QACA,IAAI,CAACA,KAAI,GAAK,wBAAuBA,KAAK,CAACM,IAAK,GAAE;MAClD;IACJ,CAAC;IACDC,QAAQA,CAACN,aAAa,EAAC;MACnB;MACAO,MAAM,CAACC,QAAQ,CAACC,OAAO,CAACT,aAAa;IAEzC;EACJ;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}