{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport NavBar from './NavBar.vue';\nexport default {\n  components: {\n    NavBar\n  },\n  name: 'ChatBox',\n  data() {\n    return {\n      greeted: false,\n      assessmentComplete: false,\n      questions: [],\n      // Array to store questions\n      currentQuestionIndex: 0,\n      userResponses: [],\n      risk_score: 0,\n      risk_category: '',\n      chance_of_diabetes: '',\n      screening_recommendation: '',\n      question: {} // Current question object\n    };\n  },\n\n  methods: {\n    startAssessment() {\n      this.greeted = true;\n      this.getQuestions();\n    },\n    getQuestions() {\n      axios.get('http://localhost:5000/questions').then(response => {\n        console.log('getQuestions response:', response);\n        this.questions = response.data.questions;\n        this.getNextQuestion();\n      }).catch(error => {\n        console.log('getQuestions error:', error);\n      });\n    },\n    getNextQuestion() {\n      console.log('getNextQuestion called. currentQuestionIndex:', this.currentQuestionIndex);\n      if (this.currentQuestionIndex < this.questions.length) {\n        this.question = this.questions[this.currentQuestionIndex];\n        console.log('Displaying question:', this.question);\n      } else {\n        this.submitResponses();\n      }\n    },\n    answerQuestion() {\n      this.userResponses.push(this.response);\n      this.currentQuestionIndex++;\n      if (this.currentQuestionIndex < this.questions.length) {\n        this.getNextQuestion();\n      } else {\n        this.submitResponses();\n      }\n      this.response = ''; // Clear the response input\n    },\n\n    submitResponses() {\n      console.log('submitResponses called. userResponses:', this.userResponses);\n      axios.post('http://localhost:5000/answers', {\n        responses: this.userResponses\n      }).then(response => {\n        console.log('submitResponses response:', response);\n        this.risk_score = response.data.risk_score;\n        this.risk_category = response.data.risk_category;\n        this.chance_of_diabetes = response.data.chance_of_diabetes;\n        this.screening_recommendation = response.data.screening_recommendation;\n      }).catch(error => {\n        console.log('submitResponses error:', error);\n      });\n      this.assessmentComplete = true;\n    },\n    subscribeMe() {\n      axios.post('http://localhost:5000/register').then(response => {\n        console.log('subscribeMe response:', response);\n      }).catch(error => {\n        console.log('subscribeMe error:', error);\n      });\n      this.$router.push('/register');\n    }\n  }\n};","map":{"version":3,"names":["axios","NavBar","components","name","data","greeted","assessmentComplete","questions","currentQuestionIndex","userResponses","risk_score","risk_category","chance_of_diabetes","screening_recommendation","question","methods","startAssessment","getQuestions","get","then","response","console","log","getNextQuestion","catch","error","length","submitResponses","answerQuestion","push","post","responses","subscribeMe","$router"],"sources":["C:\\Users\\18765\\Downloads\\COMP3901-Capstone\\src\\components\\DiabotPage.vue"],"sourcesContent":["\r\n\r\n<template>\r\n\r\n  <NavBar/>\r\n\r\n  <div class=\"chat-container\">\r\n    <div class=\"chat-sidebar\">\r\n      <h1>DIABOT <br>CHAT</h1>\r\n    </div>\r\n\r\n    <div class=\"chat-content\">\r\n        <div v-if=\"!greeted\">\r\n          <h2>Welcome! How can I assist you?</h2>\r\n          <button v-on:click=\"startAssessment\" class=\"button\">Start Assessment</button>\r\n        </div>\r\n\r\n        <div v-else>\r\n          <section v-if=\"!assessmentComplete\" class=\"chat-messages\">\r\n            <div class=\"message\">\r\n              <h2 class=\"message-content\">\r\n                {{ question.question }}\r\n              </h2>\r\n            </div>\r\n            <div class=\"chat-input\">\r\n              <input class=\"input\" type=\"text\" ref=\"answer\" v-model=\"response\">\r\n              <button v-on:click=\"answerQuestion\" class=\"btn\">Submit </button>\r\n            </div>\r\n          </section>\r\n\r\n          <section v-else>\r\n            <h2>Assessment Complete!</h2>\r\n            <h2>Your Risk</h2>\r\n            <p>Risk Score: {{ risk_score }}</p>\r\n            <p>Risk Category: {{ risk_category }}</p>\r\n            <p>Chance of Developing Diabetes: {{ chance_of_diabetes }}</p>\r\n            <p>Screening Recommendation: {{ screening_recommendation }}</p>\r\n            <br>\r\n\r\n          <div v-if=\"risk_category==='High risk' || risk_category==='Very high risk'\">\r\n            <h2>Do you want to subscribe to be a patient of Diabot? üè•</h2>\r\n            <button v-on:click=\"subscribeMe\">Yes </button>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios';\r\nimport NavBar from './NavBar.vue'\r\n\r\nexport default {\r\n  components:{\r\n    NavBar,\r\n  },\r\n  name: 'ChatBox',\r\n  data() {\r\n    return {\r\n      greeted: false,\r\n      assessmentComplete: false,\r\n      questions: [], // Array to store questions\r\n      currentQuestionIndex: 0,\r\n      userResponses: [],\r\n      risk_score: 0,\r\n      risk_category: '',\r\n      chance_of_diabetes: '',\r\n      screening_recommendation: '',\r\n      question: {} // Current question object\r\n    };\r\n  },\r\n  methods: {\r\n    startAssessment() {\r\n      this.greeted = true;\r\n      this.getQuestions();\r\n    },\r\n    getQuestions() {\r\n      axios.get('http://localhost:5000/questions')\r\n        .then((response) => {\r\n          console.log('getQuestions response:', response);\r\n          this.questions = response.data.questions;\r\n          this.getNextQuestion();\r\n        })\r\n        .catch((error) => {\r\n          console.log('getQuestions error:', error);\r\n        });\r\n    },\r\n    getNextQuestion() {\r\n      console.log('getNextQuestion called. currentQuestionIndex:', this.currentQuestionIndex);\r\n      if (this.currentQuestionIndex < this.questions.length) {\r\n        this.question = this.questions[this.currentQuestionIndex];\r\n        console.log('Displaying question:', this.question);\r\n      } else {\r\n        this.submitResponses();\r\n      }\r\n    },\r\n    answerQuestion() {\r\n      this.userResponses.push(this.response);\r\n      this.currentQuestionIndex++;\r\n      if (this.currentQuestionIndex < this.questions.length) {\r\n        this.getNextQuestion();\r\n      } else {\r\n        this.submitResponses();\r\n      }\r\n      this.response = ''; // Clear the response input\r\n    },\r\n    submitResponses() {\r\n      console.log('submitResponses called. userResponses:', this.userResponses);\r\n      axios.post('http://localhost:5000/answers', {\r\n        responses: this.userResponses\r\n      })\r\n        .then((response) => {\r\n          console.log('submitResponses response:', response);\r\n          this.risk_score = response.data.risk_score;\r\n          this.risk_category = response.data.risk_category;\r\n          this.chance_of_diabetes = response.data.chance_of_diabetes;\r\n          this.screening_recommendation = response.data.screening_recommendation;\r\n        })\r\n        .catch((error) => {\r\n          console.log('submitResponses error:', error);\r\n        });\r\n      this.assessmentComplete = true;\r\n    },\r\n    subscribeMe() {\r\n      axios.post('http://localhost:5000/register')\r\n        .then((response) => {\r\n          console.log('subscribeMe response:', response);\r\n        })\r\n        .catch((error) => {\r\n          console.log('subscribeMe error:', error);\r\n        });\r\n\r\n        this.$router.push('/register')\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n  .btn{\r\n    width: 10vh;\r\n    padding: 5px;\r\n    color: white;\r\n    background-color: #4C8F9E;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    font-family: 'Times New Roman', Times, serif;\r\n    font-size: 20px;\r\n  }\r\n\r\n  .button{\r\n    display: block;\r\n    width: 30vh;\r\n    padding: 10px;\r\n    color: white;\r\n    background-color: #4C8F9E;\r\n    border: none;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    font-family: 'Times New Roman', Times, serif;\r\n    font-size: 25px;\r\n  }\r\n\r\n  .chat-container {\r\n    display: flex;\r\n    width: 60%;\r\n    height: 80vh;\r\n  }\r\n\r\n  .chat-messages {\r\n    flex: 1;\r\n    font-size: 10px;\r\n    overflow-y: auto; /* Enable vertical scrolling */\r\n    }\r\n  .message {\r\n    font-size: 20px;\r\n  }\r\n\r\n  .chat-input input {\r\n    flex: 1;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    border: 1px solid #ccc;\r\n  }\r\n\r\n  .chat-input button {\r\n    border-radius: 5px;\r\n    background-color: #4C8F9E;\r\n    color: #fff;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .chat-sidebar {\r\n    width: 22%;\r\n    height: vh;\r\n    /* min-height: 84.5vh; */\r\n    padding: 2px;\r\n    border-left: 1px solid #ccc;\r\n    background-color: #4C8F9E;\r\n    z-index: -1;\r\n  }\r\n\r\n  .chat-sidebar h1 {\r\n    color: white;\r\n    font-family: Georgia, 'Times New Roman', Times, serif;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100%;\r\n  }\r\n\r\n  .chat-content {\r\n    padding-left: 10px;\r\n  }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}