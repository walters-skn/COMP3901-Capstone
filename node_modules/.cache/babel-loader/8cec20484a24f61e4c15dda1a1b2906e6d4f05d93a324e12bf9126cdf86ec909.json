{"ast":null,"code":"import SubscriberNavbar from './SubscriberNavbar.vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    SubscriberNavbar\n  },\n  data() {\n    return {\n      hospitals: [],\n      parishes: [],\n      selectedParish: '',\n      selectedAddress: ''\n    };\n  },\n  methods: {\n    getAllHospitals() {\n      axios.get('http://localhost:5000/clinic').then(response => {\n        console.log('getAllHospitals- response:', response);\n        this.hospitals = response.data.clinics;\n      }).catch(error => {\n        console.log('getAllHospitals- error:', error);\n      });\n    },\n    filterByParish() {\n      this.filteredHospitals = this.selectedParish ? this.hospitals.filter(hospital => hospital.parish === this.selectedParish) : this.hospitals;\n    }\n  },\n  created() {\n    this.getAllHospitals();\n    this.filterByParish();\n  },\n  computed: {\n    // filteredHospitals() {\n    //     if (!this.selectedParish) {\n    //         return this.hospitals;\n    //     } else {\n    //         return this.hospitals.filter((hospital) => hospital.parish === this.selectedParish);\n    //     }\n    // },\n    filteredHospitals() {\n      if (!this.selectedAddress) {\n        return this.hospitals;\n      } else {\n        const selectedAddressLower = this.selectedAddress.toLowerCase();\n        return this.hospitals.filter(hospital => hospital.address.toLowerCase().includes(selectedAddressLower));\n      }\n    }\n  },\n  mounted() {\n    this.parishes = Array.from(new Set(this.hospitals.map(hospital => hospital.parish)));\n  }\n};","map":{"version":3,"names":["SubscriberNavbar","axios","components","data","hospitals","parishes","selectedParish","selectedAddress","methods","getAllHospitals","get","then","response","console","log","clinics","catch","error","filterByParish","filteredHospitals","filter","hospital","parish","created","computed","selectedAddressLower","toLowerCase","address","includes","mounted","Array","from","Set","map"],"sources":["C:\\Users\\18765\\Downloads\\COMP3901-Capstone\\src\\components\\ClinicsPage.vue"],"sourcesContent":["\r\n<template>\r\n    <div>\r\n        <SubscriberNavbar/>\r\n\r\n        <h1 class=\"heading\"> <strong> <b> List of Nearby Clinics and Hospitals</b></strong></h1>\r\n\r\n        <!-- <div class=\"filter\">\r\n            <label for=\"parish-select\" class=\"parish\"> <strong> Parishes: </strong></label>\r\n            <select id=\"parish-select\" v-model=\"selectedParish\" class=\"parishselect\">\r\n                <option value=\"\"> ALL</option>\r\n                <option v-for=\"parish in parishes\" :value=\"parish\" :key=\"parish\">{{ parish }}</option>\r\n            </select>\r\n        </div> -->\r\n        <div class=\"filter\">\r\n            <label for=\"address-input\" class=\"address\"> <strong> Enter Health Care Facilities By Parish</strong></label>\r\n            <input id=\"address-input\" v-model=\"selectedAddress\" class=\"addressinput\" placeholder=\"Enter your Parish\">\r\n        </div>\r\n\r\n        <br>\r\n\r\n        <div class=\"hospital-list-container\">\r\n            <div class=\"hospital-list\">\r\n                <div v-for=\"hospital in filteredHospitals\" :key=\"hospital.name\" class=\"hospital\">\r\n                    <div class=\"details\">\r\n                        <h3 class=\"name\" >{{ hospital.name }}</h3>\r\n                        <p><strong>Type:</strong> {{ hospital.type }}</p>\r\n                        <p><strong>Address:</strong> {{ hospital.address }}</p>\r\n                        <p><strong>Parish:</strong> {{ hospital.parish }}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n                \r\n    </div>\r\n  </template>\r\n  \r\n<script>\r\n\r\n    import SubscriberNavbar from './SubscriberNavbar.vue'\r\n    import axios from 'axios'\r\n\r\n    export default {\r\n        components:{\r\n            SubscriberNavbar,\r\n        },\r\n        data() {\r\n            return {\r\n                hospitals: [],\r\n                parishes: [],\r\n                selectedParish: '',\r\n                selectedAddress: '',\r\n            };\r\n        },\r\n        methods: {\r\n            getAllHospitals() {\r\n                axios.get('http://localhost:5000/clinic')\r\n                    .then((response) => {\r\n                        console.log('getAllHospitals- response:', response);\r\n                        this.hospitals = response.data.clinics;\r\n                    }).catch((error) => {\r\n                        console.log('getAllHospitals- error:', error);\r\n                    })\r\n            },\r\n            filterByParish() {\r\n            this.filteredHospitals = this.selectedParish\r\n                ? this.hospitals.filter((hospital) => hospital.parish === this.selectedParish)\r\n                : this.hospitals;\r\n            }\r\n        },\r\n        created() {\r\n            this.getAllHospitals();\r\n            this.filterByParish();\r\n        },\r\n        computed: {\r\n            // filteredHospitals() {\r\n            //     if (!this.selectedParish) {\r\n            //         return this.hospitals;\r\n            //     } else {\r\n            //         return this.hospitals.filter((hospital) => hospital.parish === this.selectedParish);\r\n            //     }\r\n            // },\r\n            filteredHospitals() {\r\n                if (!this.selectedAddress) {\r\n                    return this.hospitals;\r\n                } else {\r\n                    const selectedAddressLower = this.selectedAddress.toLowerCase();\r\n                    return this.hospitals.filter((hospital) =>\r\n                        hospital.address.toLowerCase().includes(selectedAddressLower)\r\n                    );\r\n                }\r\n            },\r\n        },\r\n        mounted() {\r\n            this.parishes = Array.from(new Set(this.hospitals.map((hospital) => hospital.parish)));\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    .address{\r\n        font-family: Georgia, 'Times New Roman', Times, serif;\r\n        font-size: 24px;\r\n    }\r\n  \r\n    .heading{\r\n        font-family: Georgia, 'Times New Roman', Times, serif;\r\n        color: #4890a0;\r\n        text-align: center;\r\n        font-size: 40px;\r\n    }\r\n\r\n    .filter{\r\n        padding: 5px;\r\n        margin-left: 35px;\r\n        font-family: 'Times New Roman', Times, serif;\r\n        text-align: center;\r\n\r\n    }\r\n\r\n    .addressinput{\r\n        padding: 5px;\r\n        width: 10%;\r\n        height: 2vh;\r\n        border: 3px solid #ccc;\r\n        /* border-radius: 10px; */\r\n    }\r\n\r\n    .hospital-list-container {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        min-height: 100vh;\r\n    }\r\n\r\n    .hospital-list{\r\n        width: 80%;\r\n        max-width: 800px;\r\n    }\r\n\r\n    .details{\r\n        /* background-color: #6b7578; */\r\n        padding: 10px;\r\n        border: 5px solid #ccc;\r\n        border-radius: 4px ;\r\n        color: black;\r\n        width: 50%;\r\n    }\r\n    \r\n    .hospital {\r\n        margin-bottom: 20px;\r\n    }\r\n    \r\n    h3 {\r\n        font-size: 20px;\r\n    }\r\n    \r\n    p {\r\n        margin: 5px 0;\r\n    }\r\n</style>\r\n"],"mappings":"AAuCI,OAAOA,gBAAe,MAAO,wBAAuB;AACpD,OAAOC,KAAI,MAAO,OAAM;AAExB,eAAe;EACXC,UAAU,EAAC;IACPF;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,cAAc,EAAE,EAAE;MAClBC,eAAe,EAAE;IACrB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,eAAeA,CAAA,EAAG;MACdR,KAAK,CAACS,GAAG,CAAC,8BAA8B,EACnCC,IAAI,CAAEC,QAAQ,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,QAAQ,CAAC;QACnD,IAAI,CAACR,SAAQ,GAAIQ,QAAQ,CAACT,IAAI,CAACY,OAAO;MAC1C,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;QAChBJ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEG,KAAK,CAAC;MACjD,CAAC;IACT,CAAC;IACDC,cAAcA,CAAA,EAAG;MACjB,IAAI,CAACC,iBAAgB,GAAI,IAAI,CAACb,cAAa,GACrC,IAAI,CAACF,SAAS,CAACgB,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,MAAK,KAAM,IAAI,CAAChB,cAAc,IAC3E,IAAI,CAACF,SAAS;IACpB;EACJ,CAAC;EACDmB,OAAOA,CAAA,EAAG;IACN,IAAI,CAACd,eAAe,CAAC,CAAC;IACtB,IAAI,CAACS,cAAc,CAAC,CAAC;EACzB,CAAC;EACDM,QAAQ,EAAE;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACAL,iBAAiBA,CAAA,EAAG;MAChB,IAAI,CAAC,IAAI,CAACZ,eAAe,EAAE;QACvB,OAAO,IAAI,CAACH,SAAS;MACzB,OAAO;QACH,MAAMqB,oBAAmB,GAAI,IAAI,CAAClB,eAAe,CAACmB,WAAW,CAAC,CAAC;QAC/D,OAAO,IAAI,CAACtB,SAAS,CAACgB,MAAM,CAAEC,QAAQ,IAClCA,QAAQ,CAACM,OAAO,CAACD,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,oBAAoB,CAChE,CAAC;MACL;IACJ;EACJ,CAAC;EACDI,OAAOA,CAAA,EAAG;IACN,IAAI,CAACxB,QAAO,GAAIyB,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAAC,IAAI,CAAC5B,SAAS,CAAC6B,GAAG,CAAEZ,QAAQ,IAAKA,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC;EAC1F;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}